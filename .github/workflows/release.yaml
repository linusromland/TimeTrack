name: Release Workflow

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git fetch --force --tags

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.3'

      - name: Determine Version
        id: version
        run: echo "::set-output name=version::$(grep -oP '(?<=^## )\d+\.\d+\.\d+' CHANGELOG.md | head -1)"

      - name: Check if Release Exists
        id: check_release
        run: |
          RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.version.outputs.version }}"
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $RELEASE_URL)
          if [ "$RESPONSE" == "404" ]; then
            echo "::set-output name=exists::false"
          else
            echo "::set-output name=exists::true"
          fi

      - name: Create Git Tag
        if: steps.check_release.outputs.exists == 'false'
        run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git tag -a "v${{ steps.version.outputs.version }}" -m "Version v${{ steps.version.outputs.version }}"
            git push origin "v${{ steps.version.outputs.version }}" --follow-tags
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        if: steps.check_release.outputs.exists == 'false' && steps.version.outputs.version != ''
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENVIROMENT: production
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
name: Release Workflow

on:
    push:
        branches:
            - master

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Go
              uses: actions/setup-go@v2
              with:
                  go-version: '1.21.3'

            - name: Install Goreleaser
              run: |
                  curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh -s -- -b $(go env GOPATH)/bin
              if: success()

            - name: Determine Version
              id: version
              run: echo "::set-output name=version::$(grep -oP '(?<=^## )\d+\.\d+\.\d+' CHANGELOG.md | head -1)"

            - name: Create GitHub Release
              run: |
                if [ "${{ steps.version.outputs.version != '' }}" == "true" ]; then
                  version_content=$(awk "/^## ${{ steps.version.outputs.version }} /,/^## [0-9]/" CHANGELOG.md | grep -v "^## [0-9]")
                  curl -X POST \
                    -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                    -H "Accept: application/vnd.github.v3+json" \
                    https://api.github.com/repos/${{ github.repository }}/releases \
                    -d '{
                        "tag_name": "v${{ steps.version.outputs.version }}",
                        "name": "Release v${{ steps.version.outputs.version }}",
                        "body": "$version_content"
                      }'
                fi

            - name: Build and Release
              run: goreleaser release --clean
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  ENVIROMENT: production
                  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
                  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
              if: steps.version.outputs.version != ''
